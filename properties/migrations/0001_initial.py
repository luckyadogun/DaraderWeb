# Generated by Django 2.2.10 on 2020-03-04 01:12

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager
import properties.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('is_approved', models.BooleanField(default=False, help_text='click here to approve or disapprove this company', verbose_name='approved companies')),
                ('is_featured', models.BooleanField(default=False, help_text='click here if this company made payment to be featured', verbose_name='featured companies')),
                ('is_featured_expires', models.DateField(null=True)),
                ('name', models.CharField(max_length=200, unique=True, verbose_name='company name')),
                ('office_phone', models.CharField(max_length=17, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('mobile_phone', models.CharField(max_length=17, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('about', models.TextField(blank=True, null=True, verbose_name='about')),
                ('logo', models.ImageField(default='', upload_to=properties.models.company_logo_image_path, verbose_name='logo')),
                ('account_type', models.CharField(choices=[('agent', 'agent'), ('developer', 'developer')], max_length=20, verbose_name='account type')),
                ('manager', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('agents', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='country')),
            ],
        ),
        migrations.CreateModel(
            name='Property',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('property_id', models.CharField(default='1825489f', max_length=8, unique=True)),
                ('title', models.CharField(max_length=200, verbose_name='title')),
                ('address', models.CharField(max_length=200, verbose_name='address')),
                ('neighborhood', models.CharField(blank=True, max_length=200, null=True, verbose_name='neighborhood')),
                ('zipcode', models.CharField(blank=True, max_length=20, null=True, verbose_name='zipcode or postal code')),
                ('property_category', models.CharField(choices=[('sale', 'sale'), ('rent', 'rent'), ('lease', 'lease')], max_length=20, verbose_name='category')),
                ('property_type', models.CharField(choices=[('all', 'all'), ('flat', 'flat'), ('house', 'house'), ('land', 'land'), ('commercial', 'commercial'), ('event centre', 'event centre')], max_length=20, verbose_name='type')),
                ('market_status', models.CharField(choices=[('available', 'available'), ('unavailable', 'unavailable')], max_length=20, verbose_name='status')),
                ('price', models.DecimalField(decimal_places=2, max_digits=20, verbose_name='price')),
                ('description', models.TextField(verbose_name='description')),
                ('country', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='properties.Country')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='properties.Company')),
            ],
            options={
                'get_latest_by': ['created'],
            },
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='state')),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='properties.Country')),
            ],
        ),
        migrations.CreateModel(
            name='PropertyDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bedrooms', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('livingrooms', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('bathrooms', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('parking_spaces', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('total_area', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('covered_area', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('toilets', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('has_basketball_court', models.BooleanField(blank=True, null=True, verbose_name='basketball court')),
                ('has_gym', models.BooleanField(blank=True, null=True, verbose_name='gym')),
                ('is_wheelchair_friendly', models.BooleanField(blank=True, null=True, verbose_name='wheelchair friendly')),
                ('has_swimming_pool', models.BooleanField(blank=True, null=True, verbose_name='swimming pool')),
                ('property_obj', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='properties.Property')),
            ],
        ),
        migrations.AddField(
            model_name='property',
            name='state',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='properties.State'),
        ),
        migrations.CreateModel(
            name='Gallery',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to=properties.models.property_images_directory_path, verbose_name='image')),
                ('video_link', models.URLField(max_length=255)),
                ('property_obj', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='properties.Property')),
            ],
        ),
    ]
